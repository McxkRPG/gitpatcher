plugins {
    id 'java-gradle-plugin'
    id 'groovy'

    id 'eclipse'
    id 'idea'

    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.15.0'

    id 'org.cadixdev.licenser' version '0.6.1'
    id 'net.minecraftforge.gradleutils' version '1.+'
}

group = 'net.minecraftforge' // Publishing under our name as we are a fork
version = gradleutils.getTagOffsetBranchVersion(null, 'master', 'HEAD')
description = 'A Gradle plugin to manage patches for Git repositories'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    mavenCentral()
}

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

license {
    header = file('LICENSE')
    include '**/*.java'
    include '**/*.groovy'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        withType(MavenPublication) {
            pom {
                description = project.description
            }
        }
    }
    repositories {
        maven {
            name = "IzzelAliz"
            url = uri('https://maven.izzel.io/' + (project.version.toString().endsWith('SNAPSHOT') ? 'snapshots' : 'releases'))
            credentials {
                username = project.findProperty("mavenUser") ?: System.getenv("ARCLIGHT_USER")
                password = project.findProperty("mavenToken") ?: System.getenv("ARCLIGHT_TOKEN")
            }
        }
    }
}

tasks.named('javadocJar', Jar).configure {
    dependsOn 'groovydoc'
    archiveClassifier = 'groovydoc'
    from groovydoc.destinationDir
}

validatePlugins {
    failOnWarning = false // abstract classes should be ok without annotations?
}

gradlePlugin {
    plugins {
        gitpatcherPlugin {
            id = 'net.minecraftforge.gitpatcher'
            implementationClass = 'net.minecrell.gitpatcher.GitPatcher'
            displayName = 'gitpatcher'
            description = project.description
        }
    }
}

pluginBundle {
    website = 'https://github.com/MinecraftForge/gitpatcher'
    vcsUrl = website
    description = project.description
    tags = ['git']
}
